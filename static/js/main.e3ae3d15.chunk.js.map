{"version":3,"sources":["components/Search.module.css","components/Spinner.module.css","components/MovieCard.module.css","App.module.css","components/MoviesGrid.module.css","components/Spinner.jsx","utils/httpClient.js","hooks/useQuery.jsx","pages/MovieDetails.jsx","components/movieCard.jsx","components/MoviesGrid.jsx","components/Search.jsx","pages/LandingPage.jsx","App.jsx","index.js","pages/MovieDetails.module.css"],"names":["module","exports","Spinner","className","styles","spinner","spinning","size","get","path","fetch","headers","Authorization","then","result","json","useQuery","URLSearchParams","useLocation","search","MovieDetails","movieId","useParams","useState","isLoading","setIsLoading","movie","setMovie","useEffect","data","imageUrl","poster_path","detailsContainer","col","movieImage","src","alt","title","movieDetails","firstItem","genres","map","genre","name","join","overview","MovieCard","movieCard","to","id","width","height","original_title","MoviesGrid","movies","setMovies","results","moviesGrid","Search","searchText","setSearchText","history","useHistory","searchContainer","onSubmit","e","preventDefault","push","searchBox","searchInput","type","value","onChange","target","searchButton","LandingPage","App","exact","ReactDOM","render","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,UAAY,0BAA0B,aAAe,6BAA6B,YAAc,8B,mBCApKD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,mBCAhED,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,WAAa,gC,mBCAnHD,EAAOC,QAAU,CAAC,MAAQ,qB,mBCA1BD,EAAOC,QAAU,CAAC,WAAa,iC,uKCExB,SAASC,IACZ,OACI,qBAAKC,UAAWC,IAAOC,QAAvB,SACI,cAAC,IAAD,CAAWF,UAAWC,IAAOE,SAAUC,KAAM,OCJlD,SAASC,EAAIC,GAClB,OAAOC,MAHG,+BAGSD,EAAM,CACvBE,QAAS,CACPC,cACE,6NACF,eAAgB,oCAEjBC,MAAK,SAACC,GAAD,OAAYA,EAAOC,U,oBCNtB,SAASC,IACZ,OAAO,IAAIC,gBAAgBC,cAAcC,QCGtC,SAASC,IACd,IAAQC,EAAYC,cAAZD,QACR,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAYA,GATAC,qBAAU,WACRH,GAAa,GAEbjB,EAAI,UAAYa,GAASR,MAAK,SAACgB,GAC7BF,EAASE,GACTJ,GAAa,QAEd,CAACJ,IAEAG,EACF,OAAO,cAACtB,EAAD,IAGT,IAAM4B,EAAW,kCAAoCJ,EAAMK,YAC3D,OACE,sBAAK5B,UAAWC,IAAO4B,iBAAvB,UACE,qBACE7B,UAAS,UAAKC,IAAO6B,IAAZ,YAAmB7B,IAAO8B,YACnCC,IAAKL,EACLM,IAAKV,EAAMW,QAEb,sBAAKlC,UAAS,UAAKC,IAAO6B,IAAZ,YAAmB7B,IAAOkC,cAAxC,UACE,oBAAGnC,UAAWC,IAAOmC,UAArB,UACE,4CADF,IAC2Bb,EAAMW,SAEjC,8BACE,6CAAyB,IACxBX,EAAMc,OAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMC,QAAMC,KAAK,SAEhD,8BACE,kDADF,IACiClB,EAAMmB,kB,qBCvCxC,SAASC,EAAT,GAAgC,IAAVpB,EAAS,EAATA,MACnBI,EAAW,kCAAoCJ,EAAMK,YAC3D,OAEI,oBAAI5B,UAAWC,IAAO2C,UAAtB,SACI,eAAC,IAAD,CAAMC,GAAI,WAAatB,EAAMuB,GAA7B,UACA,qBAAKC,MAAO,IACRC,OAAQ,IACPhD,UAAWC,IAAO8B,WACjBC,IAAKL,EACJM,IAAKV,EAAM0B,iBAClB,8BAAM1B,EAAMW,a,qBCRjB,SAASgB,IACZ,MAA4B9B,mBAAS,IAArC,mBAAO+B,EAAP,KAAeC,EAAf,KACA,EAAkChC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMN,EADQH,IACOR,IAAI,UAavB,OAXFoB,qBAAU,WACRH,GAAa,GAIXjB,EAHgBW,EACf,uBAAyBA,EAC1B,mBACeN,MAAK,SAACgB,GACnB0B,EAAU1B,EAAK2B,SACf/B,GAAa,QAEd,CAACN,IAEAK,EACK,cAACtB,EAAD,IAIX,oBAAIC,UAAWC,IAAOqD,WAAtB,SACKH,EAAOb,KAAI,SAACf,GAAD,OACR,cAACoB,EAAD,CAA0BpB,MAAOA,GAAjBA,EAAMuB,S,qBC1B3B,SAASS,IACZ,IACMvC,EADQH,IACOR,IAAI,UAEzB,EAAoCe,mBAAS,IAA7C,mBAAOoC,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,cAEhBlC,qBAAU,WACNgC,EAAczC,GAAU,MACzB,CAACA,IAKJ,OACI,sBAAMhB,UAAWC,IAAO2D,gBAAiBC,SALxB,SAACC,GAClBA,EAAEC,iBACFL,EAAQM,KAAK,YAAcR,IAG3B,SACI,sBAAKxD,UAAWC,IAAOgE,UAAvB,UACI,uBACCjE,UAAWC,IAAOiE,YAClBC,KAAK,OACLC,MAAOZ,EACPa,SAAU,SAACP,GAAD,OAAOL,EAAcK,EAAEQ,OAAOF,UAEzC,wBAAQpE,UAAWC,IAAOsE,aAAcJ,KAAK,SAA7C,SACI,cAAC,IAAD,CAAU/D,KAAM,YC3B7B,SAASoE,IACZ,OACI,gCACI,cAACjB,EAAD,IACA,cAACL,EAAD,OCGL,SAASuB,IACZ,OACI,eAAC,IAAD,WACC,iCACG,cAAC,IAAD,CAAM5B,GAAG,IAAT,SACI,oBAAI7C,UAAWC,IAAOiC,MAAtB,wBAGP,+BACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwC,OAAK,EAACpE,KAAK,mBAAlB,SACE,cAACW,EAAD,MAEF,cAAC,IAAD,CAAOX,KAAK,IAAZ,SACE,cAACkE,EAAD,cClBdG,IAASC,OAAO,cAACH,EAAD,IAASI,SAASC,eAAe,U,kBCLjDjF,EAAOC,QAAU,CAAC,iBAAmB,uCAAuC,IAAM,0BAA0B,WAAa,iCAAiC,aAAe,mCAAmC,UAAY,mC","file":"static/js/main.e3ae3d15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"Search_searchContainer__2nEvc\",\"searchBox\":\"Search_searchBox__1d78V\",\"searchButton\":\"Search_searchButton__3D8kV\",\"searchInput\":\"Search_searchInput__1_thJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1ZNzl\",\"spinning\":\"Spinner_spinning__3BWlZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"MovieCard_movieCard__1Sg7t\",\"movieImage\":\"MovieCard_movieImage__wLoPS\",\"moviesGrid\":\"MovieCard_moviesGrid__1klJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__VgrHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesGrid\":\"MoviesGrid_moviesGrid__3hdyt\"};","import { FaSpinner } from 'react-icons/fa';\r\nimport styles from \"./Spinner.module.css\";\r\n\r\nexport function Spinner() {\r\n    return (\r\n        <div className={styles.spinner}>\r\n            <FaSpinner className={styles.spinning} size={60} />\r\n        </div>\r\n    )\r\n}","const API = \"https://api.themoviedb.org/3\";\r\n\r\nexport function get(path) {\r\n  return fetch(API + path, {\r\n    headers: {\r\n      Authorization:\r\n        \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzUzN2ZmMTlmMzgxZGQ3YjY3ZWVlMWVhOGI4MTY0YSIsInN1YiI6IjVlM2ExNmU1MGMyNzEwMDAxODc1NTI4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nOpZ_nBtA93tbzr6-rxD0760tssAAaSppyjRv9anArs\",\r\n      \"Content-Type\": \"application/json;charset=utf-8\",\r\n    },\r\n  }).then((result) => result.json());\r\n}","import { useLocation } from \"react-router\";\r\n\r\n\r\nexport function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Spinner } from \"../components/Spinner\";\r\nimport { get } from \"../utils/httpClient\";\r\nimport styles from \"./MovieDetails.module.css\";\r\nimport { useQuery } from \"../hooks/useQuery\";\r\n\r\nexport function MovieDetails() {\r\n  const { movieId } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [movie, setMovie] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    get(\"/movie/\" + movieId).then((data) => {\r\n      setMovie(data);\r\n      setIsLoading(false);     \r\n    });\r\n  }, [movieId]);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  const imageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n  return (\r\n    <div className={styles.detailsContainer}>\r\n      <img\r\n        className={`${styles.col} ${styles.movieImage}`}\r\n        src={imageUrl}\r\n        alt={movie.title}\r\n      />\r\n      <div className={`${styles.col} ${styles.movieDetails}`}>\r\n        <p className={styles.firstItem}>\r\n          <strong>Title:</strong> {movie.title}\r\n        </p>\r\n        <p>\r\n          <strong>Genres:</strong>{\" \"}\r\n          {movie.genres.map((genre) => genre.name).join(\", \")}\r\n        </p>\r\n        <p>\r\n          <strong>Description:</strong> {movie.overview}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import styles from \"./MovieCard.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport function MovieCard( { movie }) {\r\n    const imageUrl = \"https://image.tmdb.org/t/p/w300\" + movie.poster_path;\r\n    return (\r\n    \r\n        <li className={styles.movieCard}>\r\n            <Link to={\"/movies/\" + movie.id}>\r\n            <img width={230}\r\n                height={345}\r\n                 className={styles.movieImage}\r\n                  src={imageUrl}\r\n                   alt={movie.original_title}/>\r\n            <div>{movie.title}</div>\r\n            </Link>\r\n        </li>\r\n        );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"../hooks/useQuery\";\r\nimport { get } from \"../utils/httpClient\";\r\nimport { MovieCard } from \"./movieCard\";\r\nimport styles from \"./MoviesGrid.module.css\";\r\nimport { Spinner } from \"../components/Spinner\";\r\n\r\nexport function MoviesGrid(){\r\n    const [movies, setMovies] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const query = useQuery();\r\n    const search = query.get(\"search\");\r\n\r\n    useEffect(() => {\r\n      setIsLoading(true);\r\n      const searchUrl = search\r\n       ? \"/search/movie?query=\" + search\r\n      : \"/discover/movie\";\r\n        get(searchUrl).then((data) => {\r\n          setMovies(data.results);\r\n          setIsLoading(false);\r\n        });\r\n      }, [search]);\r\n\r\n      if (isLoading) {\r\n        return <Spinner />;\r\n      }\r\n\r\n    return (\r\n    <ul className={styles.moviesGrid}>\r\n        {movies.map((movie) => (\r\n            <MovieCard key={movie.id} movie={movie}/>\r\n        ))}\r\n    </ul>\r\n    );\r\n}","import styles from \"./Search.module.css\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useQuery } from \"../hooks/useQuery\";\r\n\r\nexport function Search() {\r\n    const query = useQuery();\r\n    const search = query.get(\"search\");\r\n\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    useEffect(() =>{\r\n        setSearchText(search || \"\");\r\n    }, [search]);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/?search=\" + searchText);\r\n    }\r\n    return(\r\n        <form className={styles.searchContainer} onSubmit={handleSubmit}>\r\n            <div className={styles.searchBox}>\r\n                <input\r\n                 className={styles.searchInput}\r\n                 type=\"text\"\r\n                 value={searchText}\r\n                 onChange={(e) => setSearchText(e.target.value)}\r\n                  />\r\n                <button className={styles.searchButton} type=\"submit\">\r\n                    <FaSearch size={20} />\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}","import { MoviesGrid } from \"../components/MoviesGrid\";\r\nimport { Search } from \"../components/Search\";\r\n\r\nexport function LandingPage() {\r\n    return(\r\n        <div> \r\n            <Search />\r\n            <MoviesGrid />\r\n        </div>\r\n    );\r\n}","import styles from \"./App.module.css\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { MovieDetails } from \"./pages/MovieDetails\";\r\nimport { LandingPage } from \"./pages/LandingPage\";\r\n\r\nexport function App() {\r\n    return (\r\n        <Router>\r\n         <header>\r\n            <Link to=\"/\">\r\n                <h1 className={styles.title}>Movies</h1>\r\n            </Link>\r\n         </header>\r\n         <main>\r\n          <Switch>\r\n            <Route exact path=\"/movies/:movieId\">\r\n              <MovieDetails />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <LandingPage />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from \"./App\";\n\n\nReactDOM.render(<App/> , document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"MovieDetails_detailsContainer__1wTfX\",\"col\":\"MovieDetails_col__USRR_\",\"movieImage\":\"MovieDetails_movieImage__1esjR\",\"movieDetails\":\"MovieDetails_movieDetails__JFVNs\",\"firstItem\":\"MovieDetails_firstItem__Qa5Vf\"};"],"sourceRoot":""}